{"config":{"lang":["ja"],"separator":"[\\s\\-\\.]","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u30db\u30fc\u30e0","text":"<p>\u6c4e\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7f6e\u304d\u5834\u3078\u3088\u3046\u3053\u305d\u3002</p> <p>\u3053\u306e\u30b5\u30a4\u30c8\u3067\u306f\u3001\u6280\u8853\u8a2d\u8a08\u3084\u5b9f\u88c5\u306b\u95a2\u3059\u308b\u5404\u7a2e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"#_2","title":"\ud83d\udcda \u30ab\u30c6\u30b4\u30ea\u4e00\u89a7","text":""},{"location":"#_3","title":"\u8a8d\u8a3c\u30fb\u8a8d\u53ef","text":"<p>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u8a2d\u8a08\u3068\u5b9f\u88c5\u306b\u95a2\u3059\u308b\u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7fa4\u3067\u3059\u3002</p> <p>\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3078 \u2192</p>"},{"location":"#_4","title":"\ud83d\udcd6 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u3053\u306e\u30b5\u30a4\u30c8\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u65b9\u91dd\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059:</p> <ul> <li>\u6700\u65b0\u6027: 2025\u5e74\u306e\u6700\u65b0\u52d5\u5411\u3092\u53cd\u6620</li> <li>\u5b9f\u8df5\u6027: \u5b9f\u88c5\u306b\u76f4\u7d50\u3059\u308b\u5177\u4f53\u7684\u306a\u60c5\u5831\u3092\u63d0\u4f9b</li> <li>\u5305\u62ec\u6027: \u57fa\u790e\u304b\u3089\u5fdc\u7528\u307e\u3067\u4f53\u7cfb\u7684\u306b\u5b66\u7fd2\u53ef\u80fd</li> </ul>"},{"location":"#_5","title":"\ud83d\udd27 \u6280\u8853\u30b9\u30bf\u30c3\u30af","text":"<p>\u3053\u306e\u30b5\u30a4\u30c8\u306f\u4ee5\u4e0b\u306e\u6280\u8853\u3067\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059:</p> <ul> <li>MkDocs - \u9759\u7684\u30b5\u30a4\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc</li> <li>Material for MkDocs - \u30c6\u30fc\u30de</li> <li>GitHub Pages - \u30db\u30b9\u30c6\u30a3\u30f3\u30b0</li> </ul>"},{"location":"auth/","title":"\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u8a2d\u8a08\u3068\u5b9f\u88c5\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u96c6\u3067\u3059\u3002 \u57fa\u790e\u77e5\u8b58\u304b\u3089\u6700\u65b0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u307e\u3067\u3001\u4f53\u7cfb\u7684\u306b\u5b66\u7fd2\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"auth/#_2","title":"\ud83d\udcda \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u69cb\u6210","text":""},{"location":"auth/#_3","title":"\ud83c\udfaf \u57fa\u790e\u77e5\u8b58","text":"<p>\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u672c\u6982\u5ff5\u304b\u3089\u3001OAuth 2.0/OpenID Connect\u306e\u4ed5\u7d44\u307f\u307e\u3067</p> <p>\u5185\u5bb9:</p> <ul> <li>\u8a8d\u8a3c\u3068\u8a8d\u53ef\u306e\u9055\u3044</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3 vs \u30c8\u30fc\u30af\u30f3</li> <li>OAuth 2.0 / OIDC \u306e\u4ed5\u7d44\u307f</li> <li>\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u9078\u629e</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u57fa\u672c</li> </ul> <p>\u5bfe\u8c61: \u521d\u5b66\u8005\u301c\u4e2d\u7d1a\u8005</p>"},{"location":"auth/#_4","title":"\ud83d\ude80 \u5b9f\u88c5\u30ac\u30a4\u30c9","text":"<p>Next.js + Spring Boot + AWS Cognito \u3092\u4f7f\u3063\u305f\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5</p> <p>\u5185\u5bb9:</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u69cb\u6210(BFF\u30d1\u30bf\u30fc\u30f3)</li> <li>AWS Cognito \u8a2d\u5b9a</li> <li>Next.js \u5b9f\u88c5(NextAuth)</li> <li>Spring Boot \u5b9f\u88c5</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56</li> <li>\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8</li> </ul> <p>\u5bfe\u8c61: \u5b9f\u88c5\u62c5\u5f53\u8005</p>"},{"location":"auth/#_5","title":"\ud83d\udd2c \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3</p> <p>\u5185\u5bb9:</p> <ul> <li>\u6700\u65b0\u52d5\u5411(OAuth 2.1\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5ec3\u6b62)</li> <li>DPoP\u3001mTLS\u3001PAR\u3001FAPI</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3(BFF\u3001Zero Trust\u7b49)</li> <li>WebAuthn / \u30d1\u30b9\u30ad\u30fc</li> <li>\u30ec\u30ac\u30b7\u30fc\u30e2\u30c0\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3</li> </ul> <p>\u5bfe\u8c61: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3001\u4e0a\u7d1a\u958b\u767a\u8005</p>"},{"location":"auth/#_6","title":"\ud83c\udf93 \u5b66\u7fd2\u30d1\u30b9","text":""},{"location":"auth/#_7","title":"\u521d\u3081\u3066\u5b66\u3076\u65b9","text":"<ol> <li>\u57fa\u790e\u77e5\u8b58 \u3067\u5168\u4f53\u50cf\u3092\u7406\u89e3</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 \u3067\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u5b66\u7fd2</li> </ol>"},{"location":"auth/#_8","title":"\u5b9f\u88c5\u3059\u308b\u65b9","text":"<ol> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 \u3092\u4e2d\u5fc3\u306b\u5b9f\u88c5</li> <li>\u57fa\u790e\u77e5\u8b58 \u3067\u6982\u5ff5\u3092\u78ba\u8a8d</li> <li>\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3067\u9ad8\u5ea6\u306a\u5bfe\u7b56\u3092\u691c\u8a0e</li> </ol>"},{"location":"auth/#_9","title":"\u8a2d\u8a08\u3059\u308b\u65b9","text":"<ol> <li>\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3067\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u3092\u691c\u8a0e</li> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 \u3067\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u78ba\u8a8d</li> <li>\u57fa\u790e\u77e5\u8b58 \u3067\u6a19\u6e96\u4ed5\u69d8\u3092\u78ba\u8a8d</li> </ol>"},{"location":"auth/#_10","title":"\ud83d\udd11 \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7279\u5fb4","text":"<ul> <li>2025\u5e74\u5bfe\u5fdc - \u6700\u65b0\u306e\u6a19\u6e96\u3068\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9</li> <li>\u5b9f\u8df5\u7684 - \u3059\u3050\u306b\u4f7f\u3048\u308b\u30b3\u30fc\u30c9\u4f8b\u3068\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8</li> <li>\u7c21\u6f54 - \u672c\u8cea\u7684\u306a\u60c5\u5831\u306b\u7d5e\u3063\u305f\u69cb\u6210</li> <li>\u4f53\u7cfb\u7684 - \u57fa\u790e\u304b\u3089\u5fdc\u7528\u307e\u3067\u6bb5\u968e\u7684\u306b\u5b66\u7fd2\u53ef\u80fd</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u6708 \u30e1\u30f3\u30c6\u30ca\u30f3\u30b9: \u5b9a\u671f\u7684\u306b\u6700\u65b0\u60c5\u5831\u3092\u53cd\u6620</p>"},{"location":"auth/basics/","title":"\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u790e\u77e5\u8b58","text":"<p>\ud83c\udfaf \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684 \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u672c\u6982\u5ff5\u304b\u3089\u3001OAuth 2.0/OpenID Connect\u306e\u4ed5\u7d44\u307f\u307e\u3067\u3001\u4f53\u7cfb\u7684\u306b\u7406\u89e3\u3067\u304d\u307e\u3059\u3002\u5b9f\u88c5\u306b\u5fc5\u8981\u306a\u672c\u8cea\u7684\u306a\u77e5\u8b58\u306b\u7d5e\u308a\u3001\u7c21\u6f54\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"auth/basics/#_2","title":"\ud83d\udcda \u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u6b21\u306e\u30b9\u30c6\u30c3\u30d7: \u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito \u3067\u306e\u5b9f\u88c5</li> <li>\u9ad8\u5ea6\u306a\u5185\u5bb9: \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3</li> </ul>"},{"location":"auth/basics/#_3","title":"\u8a8d\u8a3c\u3068\u8a8d\u53ef","text":"\u8a8d\u8a3c(Authentication) - \u300c\u8ab0\u304b\u300d\u3092\u78ba\u8a8d <p>\u300c\u3042\u306a\u305f\u306f\u8ab0\u3067\u3059\u304b?\u300d \u3068\u3044\u3046\u554f\u3044\u306b\u7b54\u3048\u308b\u30d7\u30ed\u30bb\u30b9\u3002</p> <ul> <li>\u4f8b: \u30ed\u30b0\u30a4\u30f3\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u5165\u529b</li> <li>HTTP \u30b9\u30c6\u30fc\u30bf\u30b9: <code>401 Unauthorized</code></li> </ul> \u8a8d\u53ef(Authorization) - \u300c\u4f55\u304c\u3067\u304d\u308b\u304b\u300d\u3092\u78ba\u8a8d <p>\u300c\u3042\u306a\u305f\u306f\u4f55\u304c\u3067\u304d\u307e\u3059\u304b?\u300d \u3068\u3044\u3046\u554f\u3044\u306b\u7b54\u3048\u308b\u30d7\u30ed\u30bb\u30b9\u3002</p> <ul> <li>\u4f8b: \u7ba1\u7406\u8005\u753b\u9762\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u6a29\u9650</li> <li>HTTP \u30b9\u30c6\u30fc\u30bf\u30b9: <code>403 Forbidden</code></li> </ul> \u5b9f\u969b\u306e\u6d41\u308c"},{"location":"auth/basics/#authentication","title":"\u8a8d\u8a3c(Authentication)\u306e\u6d41\u308c","text":"<pre><code>sequenceDiagram\n    participant User as \u30e6\u30fc\u30b6\u30fc\n    participant App as \u30a2\u30d7\u30ea\n\n    User-&gt;&gt;App: \u30ed\u30b0\u30a4\u30f3(ID/\u30d1\u30b9\u30ef\u30fc\u30c9)\n    alt \u8a8d\u8a3c\u6210\u529f\n        App-&gt;&gt;User: \u2705 \u8a8d\u8a3c\u6210\u529f\n    else \u8a8d\u8a3c\u5931\u6557\n        App-&gt;&gt;User: \u274c 401 Unauthorized&lt;br/&gt;(ID/\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u9593\u9055\u3063\u3066\u3044\u308b)\n    end</code></pre>"},{"location":"auth/basics/#authorization","title":"\u8a8d\u53ef(Authorization)\u306e\u6d41\u308c","text":"<pre><code>sequenceDiagram\n    participant User as \u30e6\u30fc\u30b6\u30fc\n    participant App as \u30a2\u30d7\u30ea\n\n    User-&gt;&gt;App: \u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\n    App-&gt;&gt;App: \u6a29\u9650\u30c1\u30a7\u30c3\u30af(\u8a8d\u53ef)\n    alt \u6a29\u9650\u3042\u308a\n        App-&gt;&gt;User: \u2705 \u30c7\u30fc\u30bf\u8868\u793a\n    else \u6a29\u9650\u306a\u3057\n        App-&gt;&gt;User: \u274c 403 Forbidden&lt;br/&gt;(\u6a29\u9650\u304c\u306a\u3044)\n    end</code></pre>"},{"location":"auth/basics/#vs","title":"\u30bb\u30c3\u30b7\u30e7\u30f3 vs \u30c8\u30fc\u30af\u30f3","text":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c <pre><code>graph LR\n    Browser[\u30d6\u30e9\u30a6\u30b6] --&gt;|Cookie: session_id| Server[\u30b5\u30fc\u30d0\u30fc]\n    Server --&gt;|\u30bb\u30c3\u30b7\u30e7\u30f3\u53d6\u5f97| Store[(\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2)]</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301(Stateful)</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u30bb\u30c3\u30b7\u30e7\u30f3ID\u306e\u307f\u9001\u4fe1</li> </ul> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30b5\u30fc\u30d0\u30fc\u3067\u5373\u5ea7\u306b\u7121\u52b9\u5316\u53ef\u80fd</li> <li>\u2705 \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u5b8c\u5168\u7ba1\u7406</li> </ul> <p>\u30c7\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u274c \u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u5fc5\u8981</li> <li>\u274c \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u6642\u306b\u5171\u6709\u304c\u5fc5\u8981</li> </ul> \u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u8a8d\u8a3c(JWT) <pre><code>graph LR\n    Browser[\u30d6\u30e9\u30a6\u30b6] --&gt;|Bearer&lt;br/&gt;Token| Server[\u30b5\u30fc\u30d0\u30fc]\n    Server --&gt;|\u516c\u958b\u9375\u53d6\u5f97| AuthServer[\u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc]\n    Server --&gt;|\u7f72\u540d\u691c\u8a3c| Server</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u30b5\u30fc\u30d0\u30fc\u306f\u72b6\u614b\u3092\u6301\u305f\u306a\u3044(Stateless)</li> <li>\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u542b\u3080</li> </ul> <p>JWT \u306e\u69cb\u9020:</p> <pre><code>Header.Payload.Signature\n</code></pre> <ul> <li>Header: \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u60c5\u5831(\u4f8b: HS256, RS256)</li> <li>Payload: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3001\u6709\u52b9\u671f\u9650</li> <li>Signature: \u6539\u3056\u3093\u691c\u77e5\u7528\u306e\u7f72\u540d</li> </ul> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30b9\u30c6\u30fc\u30c8\u30ec\u30b9(\u72b6\u614b\u4e0d\u8981)</li> <li>\u2705 \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u5bb9\u6613</li> <li>\u2705 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u5171\u6709\u53ef\u80fd</li> </ul> <p>\u30c7\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u274c \u5373\u5ea7\u306a\u7121\u52b9\u5316\u304c\u56f0\u96e3</li> <li>\u274c \u30c8\u30fc\u30af\u30f3\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044</li> </ul> \u6bd4\u8f03\u8868 \u9805\u76ee \u30bb\u30c3\u30b7\u30e7\u30f3 \u30c8\u30fc\u30af\u30f3(JWT) \u72b6\u614b Stateful Stateless \u4fdd\u5b58\u5834\u6240(\u30b5\u30fc\u30d0\u30fc) \u5fc5\u8981 \u4e0d\u8981 \u7121\u52b9\u5316 \u5373\u5ea7\u306b\u53ef\u80fd \u56f0\u96e3 \u30b9\u30b1\u30fc\u30ea\u30f3\u30b0 \u5171\u6709\u5fc5\u8981 \u5bb9\u6613 \u9069\u7528 \u30e2\u30ce\u30ea\u30b9 SPA\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9"},{"location":"auth/basics/#_4","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4fdd\u5b58\u5834\u6240","text":"<p>Web\u30b5\u30fc\u30d0\u30fc\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u3001\u4fdd\u5b58\u5834\u6240\u306b\u3088\u3063\u3066\u7279\u6027\u304c\u7570\u306a\u308a\u307e\u3059\u3002</p> 1. \u30e1\u30e2\u30ea(\u30c7\u30d5\u30a9\u30eb\u30c8) <p>\u591a\u304f\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u3059\u3002</p> <pre><code>// Express.js\nconst session = require('express-session');\napp.use(session({\n  secret: 'secret-key',\n  // \u30c7\u30d5\u30a9\u30eb\u30c8: \u30e1\u30e2\u30ea\u306b\u4fdd\u5b58\n}));\n</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u9ad8\u901f\u30a2\u30af\u30bb\u30b9</li> <li>\u2705 \u8a2d\u5b9a\u4e0d\u8981</li> </ul> <p>\u30c7\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u274c \u30b5\u30fc\u30d0\u30fc\u518d\u8d77\u52d5\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u6d88\u5931</li> <li>\u274c \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u4e0d\u53ef</li> <li>\u274c \u30e1\u30e2\u30ea\u67af\u6e07\u306e\u30ea\u30b9\u30af</li> </ul> <p>\u9069\u7528: \u958b\u767a\u74b0\u5883\u3001\u5358\u4e00\u30b5\u30fc\u30d0\u30fc\u69cb\u6210</p> 2. Redis(\u672c\u756a\u63a8\u5968) <p>\u6700\u3082\u4e00\u822c\u7684\u306a\u672c\u756a\u74b0\u5883\u306e\u69cb\u6210\u3067\u3059\u3002</p> <pre><code>// Express + Redis\nconst RedisStore = require('connect-redis').default;\napp.use(session({\n  store: new RedisStore({ client: redisClient }),\n  secret: 'secret-key'\n}));\n</code></pre> <pre><code>// Spring Boot + Redis\nspring:\n  session:\n    store-type: redis\n</code></pre> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u9ad8\u901f</li> <li>\u2705 \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u5bfe\u5fdc</li> <li>\u2705 \u6c38\u7d9a\u5316\u53ef\u80fd</li> </ul> <p>\u9069\u7528: \u672c\u756a\u74b0\u5883\u3001\u8907\u6570\u30b5\u30fc\u30d0\u30fc\u69cb\u6210</p> 3. \u305d\u306e\u4ed6\u306e\u30b9\u30c8\u30ec\u30fc\u30b8 <ul> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: PostgreSQL\u3001MongoDB\u7b49</li> <li>Memcached: \u9ad8\u901f\u30ad\u30e3\u30c3\u30b7\u30e5</li> <li>DynamoDB: AWS\u74b0\u5883</li> </ul>"},{"location":"auth/basics/#_5","title":"\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u6642\u306e\u8ab2\u984c","text":"<pre><code>graph TB\n    User[\u30e6\u30fc\u30b6\u30fc]\n    LB[\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc]\n    Server1[Server 1&lt;br/&gt;\u30e1\u30e2\u30ea]\n    Server2[Server 2&lt;br/&gt;\u30e1\u30e2\u30ea]\n    Redis[(Redis&lt;br/&gt;\u5171\u6709)]\n\n    User --&gt;|1\u56de\u76ee| LB\n    LB --&gt; Server1\n    User --&gt;|2\u56de\u76ee| LB\n    LB --&gt; Server2\n\n    Server1 &lt;-.-&gt;|\u274c \u5171\u6709\u4e0d\u53ef| Server2\n    Server1 &lt;--&gt;|\u2705 \u5171\u6709\u53ef\u80fd| Redis\n    Server2 &lt;--&gt;|\u2705 \u5171\u6709\u53ef\u80fd| Redis</code></pre> <p>\u554f\u984c: \u30e1\u30e2\u30ea\u4fdd\u5b58\u3067\u306f\u3001\u5225\u30b5\u30fc\u30d0\u30fc\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u53d6\u5f97\u4e0d\u53ef</p> <p>\u89e3\u6c7a\u7b56:</p> <ul> <li>\u2705 Redis\u7b49\u306e\u5916\u90e8\u30b9\u30c8\u30ec\u30fc\u30b8(\u63a8\u5968)</li> <li>\u26a0\ufe0f \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3(\u975e\u63a8\u5968: \u969c\u5bb3\u6642\u306b\u554f\u984c)</li> </ul> <p>\u74b0\u5883\u5225\u306e\u63a8\u5968:</p> \u74b0\u5883 \u63a8\u5968\u4fdd\u5b58\u5148 \u7406\u7531 \u958b\u767a\u74b0\u5883 \u30e1\u30e2\u30ea \u30b7\u30f3\u30d7\u30eb\u3001\u9ad8\u901f \u672c\u756a(\u5358\u4e00\u30b5\u30fc\u30d0\u30fc) \u30e1\u30e2\u30ea or Redis \u8981\u4ef6\u6b21\u7b2c \u672c\u756a(\u8907\u6570\u30b5\u30fc\u30d0\u30fc) Redis \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u5fc5\u9808 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9 JWT(\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9) \u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2\u4e0d\u8981"},{"location":"auth/basics/#oauth-20-openid-connect","title":"OAuth 2.0 \u3068 OpenID Connect","text":"OAuth 2.0 - \u8a8d\u53ef\u306e\u30d7\u30ed\u30c8\u30b3\u30eb <p>\u76ee\u7684: \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30a2\u30d7\u30ea\u306b\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4e0e\u3048\u308b</p> <p>\u89e3\u6c7a\u3059\u308b\u554f\u984c:</p> <pre><code>\u274c \u60aa\u3044\u4f8b: \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5171\u6709\n\u30e6\u30fc\u30b6\u30fc \u2192 \u5199\u771f\u30a2\u30d7\u30ea\u306bGoogle\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6e21\u3059\n         \u2192 \u30a2\u30d7\u30ea\u304c\u5168\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\n\u2705 \u826f\u3044\u4f8b: OAuth 2.0\n\u30e6\u30fc\u30b6\u30fc \u2192 Google\u3067\u8a8d\u8a3c\n         \u2192 \u300c\u5199\u771f\u306e\u95b2\u89a7\u306e\u307f\u300d\u306e\u6a29\u9650\u3092\u767a\u884c\n         \u2192 \u30a2\u30d7\u30ea\u306f\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u307f\n</code></pre> OpenID Connect(OIDC) - \u8a8d\u8a3c\u306e\u30d7\u30ed\u30c8\u30b3\u30eb <p>\u76ee\u7684: OAuth 2.0 \u306b\u8a8d\u8a3c\u6a5f\u80fd\u3092\u8ffd\u52a0</p> \u9805\u76ee OAuth 2.0 OpenID Connect \u76ee\u7684 \u8a8d\u53ef \u8a8d\u8a3c \u4e3b\u306a\u30c8\u30fc\u30af\u30f3 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 ID\u30c8\u30fc\u30af\u30f3 + \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 \u53d6\u5f97\u60c5\u5831 \u30a2\u30af\u30bb\u30b9\u6a29 \u30e6\u30fc\u30b6\u30fc\u60c5\u5831 \u767b\u5834\u4eba\u7269 <pre><code>graph TB\n    User[\ud83d\udc64 \u30e6\u30fc\u30b6\u30fc]\n    Client[\ud83d\udcbb \u30af\u30e9\u30a4\u30a2\u30f3\u30c8]\n    AuthServer[\ud83d\udd10 \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc/IdP]\n    API[\ud83d\uddc4\ufe0f \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc]\n\n    User --&gt;|1. \u30ed\u30b0\u30a4\u30f3| AuthServer\n    AuthServer --&gt;|2. \u30c8\u30fc\u30af\u30f3\u767a\u884c| Client\n    Client --&gt;|3. \u30c8\u30fc\u30af\u30f3\u4ed8\u304d| API\n    API --&gt;|4. \u30c7\u30fc\u30bf| Client</code></pre> \u5f79\u5272 \u8aac\u660e \u4f8b \u30e6\u30fc\u30b6\u30fc \u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u8005 \u3042\u306a\u305f \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u30e6\u30fc\u30b6\u30fc\u304c\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea Next.js \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9 \u8a8d\u53ef\u30b5\u30fc\u30d0\u30fc/IdP \u8a8d\u8a3c\u30fb\u30c8\u30fc\u30af\u30f3\u767a\u884c AWS Cognito, Auth0 \u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc \u4fdd\u8b77\u3055\u308c\u305f\u30c7\u30fc\u30bf\u63d0\u4f9b Spring Boot API"},{"location":"auth/basics/#_6","title":"\u8a8d\u8a3c\u30d5\u30ed\u30fc","text":"Authorization Code + PKCE \u30d5\u30ed\u30fc(\u63a8\u5968) <p>2025\u5e74\u306e\u6a19\u6e96\u3002\u3059\u3079\u3066\u306e\u74b0\u5883\u3067\u63a8\u5968\u3055\u308c\u308b\u30d5\u30ed\u30fc\u3002</p> <pre><code>sequenceDiagram\n    participant Client\n    participant AuthServer\n\n    Client-&gt;&gt;Client: 1. code_verifier\u751f\u6210\n    Client-&gt;&gt;Client: 2. code_challenge\u8a08\u7b97\n    Client-&gt;&gt;AuthServer: 3. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8(code_challenge)\n    AuthServer-&gt;&gt;Client: 4. \u8a8d\u53ef\u30b3\u30fc\u30c9\n    Client-&gt;&gt;AuthServer: 5. \u8a8d\u53ef\u30b3\u30fc\u30c9 + code_verifier\n    AuthServer-&gt;&gt;AuthServer: 6. PKCE\u691c\u8a3c\n    AuthServer-&gt;&gt;Client: 7. \u30c8\u30fc\u30af\u30f3\u767a\u884c</code></pre> <p>PKCE \u306e\u4ed5\u7d44\u307f:</p> <ol> <li>\u30e9\u30f3\u30c0\u30e0\u306a<code>code_verifier</code>\u3092\u751f\u6210</li> <li><code>code_challenge = SHA256(code_verifier)</code>\u3092\u8a08\u7b97</li> <li>\u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u306b<code>code_challenge</code>\u3092\u542b\u3081\u308b</li> <li>\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u6642\u306b<code>code_verifier</code>\u3092\u9001\u4fe1</li> <li>\u30b5\u30fc\u30d0\u30fc\u304c\u691c\u8a3c: <code>SHA256(code_verifier) == code_challenge</code></li> </ol> <p>\u30e1\u30ea\u30c3\u30c8:</p> <ul> <li>\u2705 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u4e0d\u8981</li> <li>\u2705 \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u6b62</li> <li>\u2705 SPA/Mobile \u3067\u3082\u5b89\u5168</li> </ul> \u30d5\u30ed\u30fc\u9078\u629e\u30c1\u30e3\u30fc\u30c8 <pre><code>graph TD\n    Start[\u8a8d\u8a3c\u30d5\u30ed\u30fc\u3092\u9078\u3076] --&gt; Q1{\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b?}\n    Q1 --&gt;|\u3044\u3044\u3048| M2M[Client Credentials&lt;br/&gt;\u30b5\u30fc\u30d0\u30fc\u9593\u901a\u4fe1]\n    Q1 --&gt;|\u306f\u3044| Q2{\u30c7\u30d0\u30a4\u30b9\u306f?}\n    Q2 --&gt;|Web/Mobile| PKCE[Authorization Code + PKCE]\n    Q2 --&gt;|TV/IoT| Device[Device Authorization Grant]</code></pre>"},{"location":"auth/basics/#_7","title":"\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e","text":"\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 <p>\u7528\u9014: API \u30a2\u30af\u30bb\u30b9\u306e\u8a8d\u53ef</p> <pre><code>Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre> <ul> <li>\u6709\u52b9\u671f\u9650: \u77ed\u547d(15\u5206\u301c1\u6642\u9593)</li> <li>\u5185\u5bb9: \u30b9\u30b3\u30fc\u30d7(\u6a29\u9650)\u3092\u542b\u3080</li> </ul> ID\u30c8\u30fc\u30af\u30f3(OIDC) <p>\u7528\u9014: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u53d6\u5f97</p> <pre><code>{\n  \"sub\": \"user-id-12345\",\n  \"email\": \"user@example.com\",\n  \"name\": \"John Doe\",\n  \"exp\": 1616239022\n}\n</code></pre> <ul> <li>\u6709\u52b9\u671f\u9650: \u77ed\u547d(15\u5206\u301c1\u6642\u9593)</li> <li>\u5185\u5bb9: \u30e6\u30fc\u30b6\u30fc\u60c5\u5831</li> </ul> \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3 <p>\u7528\u9014: \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u518d\u767a\u884c</p> <ul> <li>\u6709\u52b9\u671f\u9650: \u9577\u547d(\u6570\u65e5\u301c\u6570\u30f6\u6708)</li> <li>\u4fdd\u7ba1: \u53b3\u91cd\u306b\u7ba1\u7406(HttpOnly Cookie\u63a8\u5968)</li> </ul>"},{"location":"auth/basics/#_8","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u57fa\u672c","text":"Cookie \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a <pre><code>Set-Cookie: session_id=xxx;\n  HttpOnly;         // JavaScript\u304b\u3089\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef(XSS\u5bfe\u7b56)\n  Secure;           // HTTPS\u901a\u4fe1\u306e\u307f\n  SameSite=Strict;  // CSRF\u5bfe\u7b56\n  Max-Age=86400     // \u6709\u52b9\u671f\u9650\n</code></pre> \u30c8\u30fc\u30af\u30f3\u4fdd\u7ba1\u5834\u6240 \u5834\u6240 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u63a8\u5968 LocalStorage \u274c XSS\u3067\u76d7\u307e\u308c\u308b \u7981\u6b62 HttpOnly Cookie \u2705 JavaScript\u4e0d\u53ef \u63a8\u5968 \u30e1\u30e2\u30ea(React State) \u2705 XSS\u8010\u6027\u9ad8 \u63a8\u5968 \u91cd\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf \u30d1\u30e9\u30e1\u30fc\u30bf \u76ee\u7684 \u5fc5\u9808\u5ea6 PKCE \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u9632\u6b62 \ud83d\udd34 \u5fc5\u9808 state CSRF \u5bfe\u7b56 \ud83d\udd34 \u5fc5\u9808 nonce ID\u30c8\u30fc\u30af\u30f3\u306e\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u9632\u6b62 \ud83d\udfe1 \u63a8\u5968"},{"location":"auth/basics/#_9","title":"\u7528\u8a9e\u96c6","text":"\u7528\u8a9e\u4e00\u89a7 \u7528\u8a9e \u8aac\u660e \u30b9\u30b3\u30fc\u30d7 \u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306e\u7bc4\u56f2(\u4f8b: <code>read:profile</code>) \u8a8d\u53ef\u30b3\u30fc\u30c9 \u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u306e\u305f\u3081\u306e\u4e00\u6642\u7684\u306a\u30b3\u30fc\u30c9 PKCE \u8a8d\u53ef\u30b3\u30fc\u30c9\u6a2a\u53d6\u308a\u653b\u6483\u3092\u9632\u3050\u4ed5\u7d44\u307f CSRF \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea XSS \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0"},{"location":"auth/basics/#_10","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u57fa\u790e\u3092\u7406\u89e3\u3057\u305f\u3089\u3001\u5b9f\u88c5\u306b\u9032\u307f\u307e\u3057\u3087\u3046:</p> <ul> <li>\u5b9f\u88c5\u30ac\u30a4\u30c9 - Next.js + Spring Boot + Cognito \u3067\u306e\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5</li> <li>\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u9ad8\u5ea6\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u6708 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u958b\u767a\u8005(\u521d\u7d1a\u301c\u4e2d\u7d1a)</p>"},{"location":"auth/implementation/","title":"Next.js + Spring Boot + Cognito \u5b9f\u88c5\u30ac\u30a4\u30c9","text":"<p>\ud83d\ude80 \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684 Next.js\u3001Spring Boot\u3001AWS Cognito\u3092\u4f7f\u3063\u305f\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u3068\u5171\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002BFF\u30d1\u30bf\u30fc\u30f3\u3092\u63a1\u7528\u3057\u30012025\u5e74\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u6e96\u62e0\u3057\u305f\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"auth/implementation/#_1","title":"\ud83d\udcda \u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u524d\u63d0\u77e5\u8b58: \u57fa\u790e\u77e5\u8b58 - \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u672c\u6982\u5ff5</li> <li>\u9ad8\u5ea6\u306a\u5185\u5bb9: \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853</li> </ul>"},{"location":"auth/implementation/#_2","title":"\u30b7\u30b9\u30c6\u30e0\u69cb\u6210","text":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3(BFF\u30d1\u30bf\u30fc\u30f3) <pre><code>graph TB\n    Browser[\ud83c\udf10 \u30d6\u30e9\u30a6\u30b6]\n    Next[\u26a1 Next.js BFF&lt;br/&gt;\u30c8\u30fc\u30af\u30f3\u7ba1\u7406&lt;br/&gt;API\u30d7\u30ed\u30ad\u30b7]\n    Cognito[\ud83d\udd10 AWS Cognito&lt;br/&gt;\u8a8d\u8a3c\u30fb\u30c8\u30fc\u30af\u30f3\u767a\u884c]\n    Spring[\u2615 Spring Boot API&lt;br/&gt;\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af]\n\n    Browser &lt;--&gt;|Cookie&lt;br/&gt;HttpOnly/Secure| Next\n    Next &lt;--&gt;|OAuth 2.0&lt;br/&gt;Code+PKCE| Cognito\n    Next --&gt;|Bearer Token| Spring</code></pre> <p>\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5f79\u5272:</p> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u8cac\u52d9 Next.js BFF \u8a8d\u8a3c\u30d5\u30ed\u30fc\u7ba1\u7406\u3001\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u3001API\u30d7\u30ed\u30ad\u30b7 AWS Cognito \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u3001\u30c8\u30fc\u30af\u30f3\u767a\u884c\u3001MFA Spring Boot \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u30c8\u30fc\u30af\u30f3\u691c\u8a3c <p>BFF\u30d1\u30bf\u30fc\u30f3\u306e\u5229\u70b9:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3057\u306a\u3044(XSS\u5bfe\u7b56)</li> <li>\u2705 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5ec3\u6b62\u306b\u5bfe\u5fdc</li> <li>\u2705 CORS\u8a2d\u5b9a\u304c\u30b7\u30f3\u30d7\u30eb</li> <li>\u2705 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3092\u5b89\u5168\u306b\u7ba1\u7406</li> </ul>"},{"location":"auth/implementation/#_3","title":"\u8a8d\u8a3c\u30d5\u30ed\u30fc","text":"\u521d\u56de\u30ed\u30b0\u30a4\u30f3 <pre><code>sequenceDiagram\n    participant Browser\n    participant Next as Next.js BFF\n    participant Cognito\n    participant Spring as Spring Boot\n\n    Browser-&gt;&gt;Next: 1. \u30ed\u30b0\u30a4\u30f3\u30af\u30ea\u30c3\u30af\n    Note over Next: PKCE\u751f\u6210\n    Next-&gt;&gt;Cognito: 2. \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8&lt;br/&gt;(code_challenge, state)\n    Cognito-&gt;&gt;Browser: 3. \u30ed\u30b0\u30a4\u30f3\u753b\u9762\n    Browser-&gt;&gt;Cognito: 4. \u8a8d\u8a3c\u60c5\u5831\u5165\u529b\n    Cognito-&gt;&gt;Next: 5. \u8a8d\u53ef\u30b3\u30fc\u30c9\n    Next-&gt;&gt;Cognito: 6. \u30c8\u30fc\u30af\u30f3\u8981\u6c42&lt;br/&gt;(code, code_verifier)\n    Cognito-&gt;&gt;Next: 7. \u30c8\u30fc\u30af\u30f3\u767a\u884c\n    Note over Next: \u30b5\u30fc\u30d0\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n    Next-&gt;&gt;Browser: 8. HttpOnly Cookie\u8a2d\u5b9a\n    Browser-&gt;&gt;Next: 9. API\u30ea\u30af\u30a8\u30b9\u30c8\n    Next-&gt;&gt;Spring: 10. Bearer Token\n    Spring-&gt;&gt;Next: 11. \u30c7\u30fc\u30bf\n    Next-&gt;&gt;Browser: 12. \u30ec\u30b9\u30dd\u30f3\u30b9</code></pre>"},{"location":"auth/implementation/#aws-cognito","title":"AWS Cognito \u8a2d\u5b9a","text":"\u30e6\u30fc\u30b6\u30fc\u30d7\u30fc\u30eb\u4f5c\u6210 <pre><code># \u8a8d\u8a3c\u30d5\u30ed\u30fc\n- Email/Password\n- MFA: Optional(TOTP\u63a8\u5968)\n- \u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc: \u5f37\u529b(12\u6587\u5b57\u4ee5\u4e0a\u3001\u5927\u5c0f\u82f1\u6570\u8a18\u53f7)\n</code></pre>"},{"location":"auth/implementation/#_4","title":"\u30a2\u30d7\u30ea\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a2d\u5b9a","text":"<pre><code># Terraform\u4f8b\nresource \"aws_cognito_user_pool_client\" \"app\" {\n  name         = \"nextjs-app\"\n  user_pool_id = aws_cognito_user_pool.main.id\n\n  # Authorization Code + PKCE\n  allowed_oauth_flows = [\"code\"]\n  allowed_oauth_flows_user_pool_client = true\n\n  # \u30b9\u30b3\u30fc\u30d7\n  allowed_oauth_scopes = [\n    \"openid\",\n    \"email\",\n    \"profile\"\n  ]\n\n  # \u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\n  callback_urls = [\n    \"http://localhost:3000/api/auth/callback/cognito\",\n    \"https://yourapp.com/api/auth/callback/cognito\"\n  ]\n\n  # \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\n  access_token_validity  = 1   # 1\u6642\u9593\n  id_token_validity      = 1   # 1\u6642\u9593\n  refresh_token_validity = 30  # 30\u65e5\n\n  # \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n  prevent_user_existence_errors = \"ENABLED\"\n  enable_token_revocation       = true\n}\n</code></pre>"},{"location":"auth/implementation/#nextjs","title":"Next.js \u5b9f\u88c5","text":"1. NextAuth \u8a2d\u5b9a <pre><code>npm install next-auth\n</code></pre> <pre><code>// app/api/auth/[...nextauth]/route.ts\nimport NextAuth from \"next-auth\";\nimport CognitoProvider from \"next-auth/providers/cognito\";\n\nexport const authOptions = {\n  providers: [\n    CognitoProvider({\n      clientId: process.env.COGNITO_CLIENT_ID!,\n      clientSecret: process.env.COGNITO_CLIENT_SECRET!,\n      issuer: process.env.COGNITO_ISSUER!,\n      checks: [\"pkce\", \"state\"], // PKCE + state \u81ea\u52d5\u8a2d\u5b9a\n    })\n  ],\n\n  session: {\n    strategy: \"jwt\",\n    maxAge: 30 * 24 * 60 * 60, // 30\u65e5\n  },\n\n  callbacks: {\n    async jwt({ token, account }) {\n      if (account) {\n        token.accessToken = account.access_token;\n        token.idToken = account.id_token;\n        token.refreshToken = account.refresh_token;\n        token.expiresAt = account.expires_at;\n      }\n\n      // \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n      if (Date.now() &lt; token.expiresAt * 1000) {\n        return token;\n      }\n\n      return refreshAccessToken(token);\n    },\n\n    async session({ session, token }) {\n      session.accessToken = token.accessToken;\n      session.error = token.error;\n      return session;\n    }\n  },\n};\n\nasync function refreshAccessToken(token: any) {\n  try {\n    const response = await fetch(\n      `${process.env.COGNITO_ISSUER}/oauth2/token`,\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: new URLSearchParams({\n          grant_type: \"refresh_token\",\n          client_id: process.env.COGNITO_CLIENT_ID!,\n          refresh_token: token.refreshToken,\n        }),\n      }\n    );\n\n    const tokens = await response.json();\n\n    return {\n      ...token,\n      accessToken: tokens.access_token,\n      idToken: tokens.id_token,\n      expiresAt: Date.now() / 1000 + tokens.expires_in,\n    };\n  } catch (error) {\n    return { ...token, error: \"RefreshAccessTokenError\" };\n  }\n}\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n</code></pre> 2. API \u30d7\u30ed\u30ad\u30b7(BFF) <pre><code>// app/api/users/profile/route.ts\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET() {\n  const session = await getServerSession(authOptions);\n\n  if (!session?.idToken) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n\n  try {\n    const response = await fetch(\n      `${process.env.API_BASE_URL}/users/profile`,\n      {\n        headers: {\n          Authorization: `Bearer ${session.idToken}`,\n        },\n      }\n    );\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    return NextResponse.json(\n      { error: \"API request failed\" },\n      { status: 500 }\n    );\n  }\n}\n</code></pre> 3. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074 <pre><code>// app/page.tsx\n\"use client\";\n\nimport { useSession, signIn, signOut } from \"next-auth/react\";\n\nexport default function Home() {\n  const { data: session, status } = useSession();\n\n  if (status === \"loading\") return &lt;div&gt;Loading...&lt;/div&gt;;\n\n  if (!session) {\n    return &lt;button onClick={() =&gt; signIn(\"cognito\")}&gt;\u30ed\u30b0\u30a4\u30f3&lt;/button&gt;;\n  }\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;\u3088\u3046\u3053\u305d\u3001{session.user?.email}\u3055\u3093&lt;/p&gt;\n      &lt;button onClick={() =&gt; signOut()}&gt;\u30ed\u30b0\u30a2\u30a6\u30c8&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"auth/implementation/#spring-boot","title":"Spring Boot \u5b9f\u88c5","text":"1. \u4f9d\u5b58\u95a2\u4fc2 <pre><code>&lt;!-- pom.xml --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-oauth2-resource-server&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre> 2. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a <pre><code>@Configuration\n@EnableWebSecurity\npublic class SecurityConfig {\n\n    @Value(\"${spring.security.oauth2.resourceserver.jwt.issuer-uri}\")\n    private String issuerUri;\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .cors(cors -&gt; cors.configurationSource(corsConfigurationSource()))\n            .csrf(csrf -&gt; csrf.disable())\n            .authorizeHttpRequests(auth -&gt; auth\n                .requestMatchers(\"/api/public/**\").permitAll()\n                .requestMatchers(\"/api/**\").authenticated()\n            )\n            .oauth2ResourceServer(oauth2 -&gt; oauth2\n                .jwt(jwt -&gt; jwt.decoder(jwtDecoder()))\n            );\n\n        return http.build();\n    }\n\n    @Bean\n    public JwtDecoder jwtDecoder() {\n        return JwtDecoders.fromIssuerLocation(issuerUri);\n    }\n\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        CorsConfiguration config = new CorsConfiguration();\n        config.setAllowedOrigins(List.of(\"http://localhost:3000\"));\n        config.setAllowedMethods(List.of(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        config.setAllowedHeaders(List.of(\"*\"));\n        config.setAllowCredentials(true);\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", config);\n        return source;\n    }\n}\n</code></pre> 3. API\u5b9f\u88c5 <pre><code>@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n\n    @GetMapping(\"/profile\")\n    public ResponseEntity&lt;UserProfile&gt; getProfile(\n        @AuthenticationPrincipal Jwt jwt\n    ) {\n        String userId = jwt.getSubject();\n        String email = jwt.getClaimAsString(\"email\");\n\n        UserProfile profile = new UserProfile(userId, email);\n        return ResponseEntity.ok(profile);\n    }\n}\n</code></pre> 4. \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb <pre><code># application.yml\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxx\n          jwk-set-uri: https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_xxxxx/.well-known/jwks.json\n</code></pre>"},{"location":"auth/implementation/#_5","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56","text":"Cookie \u8a2d\u5b9a <pre><code>// Next.js\nSet-Cookie: session_id=xxx;\n  HttpOnly;         // XSS\u5bfe\u7b56\n  Secure;           // HTTPS\u5fc5\u9808\n  SameSite=Strict;  // CSRF\u5bfe\u7b56\n  Path=/;\n  Max-Age=2592000   // 30\u65e5\n</code></pre> CSP \u8a2d\u5b9a <pre><code>// next.config.js\nconst securityHeaders = [\n  {\n    key: 'Content-Security-Policy',\n    value: \"default-src 'self'; script-src 'self' 'unsafe-inline';\"\n  },\n  {\n    key: 'X-Frame-Options',\n    value: 'DENY'\n  },\n  {\n    key: 'X-Content-Type-Options',\n    value: 'nosniff'\n  }\n];\n</code></pre> \u30c8\u30fc\u30af\u30f3\u4fdd\u7ba1\u5834\u6240 \u5834\u6240 \u7528\u9014 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 Next.js \u30b5\u30fc\u30d0\u30fc \u5168\u30c8\u30fc\u30af\u30f3 \u2705 \u6700\u3082\u5b89\u5168 HttpOnly Cookie \u30bb\u30c3\u30b7\u30e7\u30f3ID \u2705 \u5b89\u5168 LocalStorage \u306a\u3057 \u274c \u4f7f\u7528\u7981\u6b62 \u8105\u5a01\u3068\u5bfe\u7b56 \u8105\u5a01 \u5bfe\u7b56 \u5b9f\u88c5 XSS HttpOnly Cookie\u3001CSP \ud83d\udd34 \u5fc5\u9808 CSRF SameSite=Strict\u3001state \ud83d\udd34 \u5fc5\u9808 \u30c8\u30fc\u30af\u30f3\u7a83\u53d6 \u77ed\u5bff\u547d(1\u6642\u9593)\u3001HTTPS \ud83d\udd34 \u5fc5\u9808 \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0 WebAuthn/\u30d1\u30b9\u30ad\u30fc \ud83d\udfe1 \u63a8\u5968"},{"location":"auth/implementation/#_6","title":"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8","text":"AWS Cognito <ul> <li> \u30e6\u30fc\u30b6\u30fc\u30d7\u30fc\u30eb\u4f5c\u6210</li> <li> \u30a2\u30d7\u30ea\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a2d\u5b9a(Authorization Code + PKCE)</li> <li> \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u8a2d\u5b9a(1\u6642\u9593/30\u65e5)</li> <li> \u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u767b\u9332</li> <li> MFA\u6709\u52b9\u5316(\u63a8\u5968)</li> </ul> Next.js <ul> <li> NextAuth \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30fb\u8a2d\u5b9a</li> <li> \u74b0\u5883\u5909\u6570\u8a2d\u5b9a</li> <li> API \u30d7\u30ed\u30ad\u30b7\u5b9f\u88c5</li> <li> Cookie \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a</li> <li> CSP \u30d8\u30c3\u30c0\u30fc\u8a2d\u5b9a</li> </ul> Spring Boot <ul> <li> OAuth2 Resource Server \u8a2d\u5b9a</li> <li> JWT Decoder \u8a2d\u5b9a</li> <li> CORS \u8a2d\u5b9a</li> <li> API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u5b9f\u88c5</li> </ul> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 <ul> <li> HTTPS \u6709\u52b9\u5316</li> <li> HttpOnly Cookie \u4f7f\u7528</li> <li> SameSite=Strict \u8a2d\u5b9a</li> <li> CSP \u8a2d\u5b9a</li> <li> \u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u78ba\u8a8d</li> </ul>"},{"location":"auth/implementation/#_7","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":"401 Unauthorized <pre><code># \u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u5931\u6557\n- issuer-uri \u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n- \u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u3092\u78ba\u8a8d\n- JWKS URI \u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u304b\u78ba\u8a8d\n</code></pre> CORS \u30a8\u30e9\u30fc <pre><code># Next.js \u3068 Spring Boot \u306e\u8a2d\u5b9a\u78ba\u8a8d\n- Spring Boot: allowedOrigins \u306b Next.js URL\n- allowCredentials: true\n</code></pre> \u30c8\u30fc\u30af\u30f3\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u5931\u6557 <pre><code># \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u78ba\u8a8d\n- \u6709\u52b9\u671f\u9650\u5185\u304b\n- Cognito \u3067\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u78ba\u8a8d\n</code></pre>"},{"location":"auth/implementation/#_8","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7","text":"<p>\u3088\u308a\u9ad8\u5ea6\u306a\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167:</p> <ul> <li>\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - DPoP\u3001mTLS\u3001FAPI \u306a\u3069\u306e\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u6708 \u5bfe\u8c61\u8aad\u8005: \u8a8d\u8a3c\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u958b\u767a\u8005(\u4e2d\u7d1a)</p>"},{"location":"auth/reference/","title":"\u9ad8\u5ea6\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3","text":"<p>\ud83d\udd2c \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684 \u6700\u65b0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u6280\u8853(DPoP\u3001mTLS\u3001FAPI\u7b49)\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3\u3001\u30ec\u30ac\u30b7\u30fc\u30b7\u30b9\u30c6\u30e0\u306e\u30e2\u30c0\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3001\u9ad8\u5ea6\u306a\u5185\u5bb9\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"auth/reference/#_2","title":"\ud83d\udcda \u95a2\u9023\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>\u57fa\u790e: \u57fa\u790e\u77e5\u8b58 - \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u57fa\u672c</li> <li>\u5b9f\u88c5: \u5b9f\u88c5\u30ac\u30a4\u30c9 - \u5177\u4f53\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5</li> </ul>"},{"location":"auth/reference/#2025","title":"2025\u5e74\u306e\u6700\u65b0\u52d5\u5411","text":"\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u5ec3\u6b62\u306e\u5f71\u97ff <p>\u5f71\u97ff:</p> <ul> <li>\u274c \u5f93\u6765\u306e\u30b5\u30a4\u30ec\u30f3\u30c8\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5(\u96a0\u3057iframe)\u304c\u4f7f\u3048\u306a\u3044</li> <li>\u274c IdP\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u4f9d\u5b58SSO\u304c\u56f0\u96e3</li> <li>\u274c \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u3067\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7dad\u6301\u304c\u5236\u9650</li> </ul> <p>\u5bfe\u7b56:</p> <ul> <li>\u2705 BFF\u30d1\u30bf\u30fc\u30f3 - \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u30c8\u30fc\u30af\u30f3\u7ba1\u7406</li> <li>\u2705 \u540c\u4e00\u30b5\u30a4\u30c8Cookie\u904b\u7528</li> <li>\u2705 FedCM(Federated Credential Management) - \u30d6\u30e9\u30a6\u30b6\u30cd\u30a4\u30c6\u30a3\u30d6SSO</li> <li>\u2705 Authorization Code + PKCE</li> </ul> OAuth 2.1\u3078\u306e\u79fb\u884c <p>\u4e3b\u306a\u5909\u66f4\u70b9:</p> <ul> <li>\u2705 PKCE \u304c\u5168\u30d5\u30ed\u30fc\u3067\u5fc5\u9808</li> <li>\u274c Implicit Flow \u5ec3\u6b62</li> <li>\u274c Resource Owner Password Credentials Flow \u5ec3\u6b62</li> <li>\u2705 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u63a8\u5968</li> <li>\u2705 \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\u5b8c\u5168\u4e00\u81f4\u5fc5\u9808</li> </ul>"},{"location":"auth/reference/#_3","title":"\u6700\u65b0\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u6280\u8853","text":"DPoP (Demonstrating Proof-of-Possession) <p>\u76ee\u7684: \u30c8\u30fc\u30af\u30f3\u7a83\u53d6\u5f8c\u306e\u4e0d\u6b63\u5229\u7528\u3092\u9632\u3050</p> <p>\u4ed5\u7d44\u307f:</p> <pre><code>sequenceDiagram\n    participant Client\n    participant AuthServer\n    participant API\n\n    Client-&gt;&gt;Client: 1. \u79d8\u5bc6\u9375\u30fb\u516c\u958b\u9375\u30da\u30a2\u751f\u6210\n    Client-&gt;&gt;AuthServer: 2. \u30c8\u30fc\u30af\u30f3\u8981\u6c42 + DPoP Proof(\u516c\u958b\u9375\u542b\u3080)\n    AuthServer-&gt;&gt;Client: 3. DPoP-bound Token\u767a\u884c\n    Client-&gt;&gt;API: 4. Token + DPoP Proof(\u7f72\u540d\u4ed8\u304d)\n    API-&gt;&gt;API: 5. \u7f72\u540d\u691c\u8a3c\u30fb\u516c\u958b\u9375\u4e00\u81f4\u78ba\u8a8d\n    API-&gt;&gt;Client: 6. \u30c7\u30fc\u30bf\u8fd4\u5374</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u30c8\u30fc\u30af\u30f3\u3068\u516c\u958b\u9375\u3092\u7d10\u4ed8\u3051</li> <li>\u30ea\u30af\u30a8\u30b9\u30c8\u3054\u3068\u306b\u7f72\u540d\u4ed8\u304dProof\u3092\u751f\u6210</li> <li>\u7a83\u53d6\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u306f\u79d8\u5bc6\u9375\u304c\u306a\u3044\u305f\u3081\u4f7f\u7528\u4e0d\u53ef</li> </ul> <p>\u5b9f\u88c5\u4f8b:</p> <pre><code>// \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\nimport * as jose from 'jose';\n\n// 1. \u9375\u30da\u30a2\u751f\u6210\nconst { publicKey, privateKey } = await jose.generateKeyPair('ES256');\n\n// 2. DPoP Proof \u751f\u6210\nasync function createDPoPProof(method, url, accessToken) {\n  const dpopProof = await new jose.SignJWT({\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: crypto.randomUUID(),\n  })\n    .setProtectedHeader({\n      alg: 'ES256',\n      typ: 'dpop+jwt',\n      jwk: await jose.exportJWK(publicKey)\n    })\n    .sign(privateKey);\n\n  return dpopProof;\n}\n\n// 3. API\u547c\u3073\u51fa\u3057\nconst dpopProof = await createDPoPProof('GET', 'https://api.example.com/data');\nconst response = await fetch('https://api.example.com/data', {\n  headers: {\n    'Authorization': `DPoP ${accessToken}`,\n    'DPoP': dpopProof\n  }\n});\n</code></pre> mTLS (Mutual TLS) <p>\u76ee\u7684: \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u306e\u5f37\u5316</p> <p>\u4ed5\u7d44\u307f:</p> <ul> <li>\u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u53cc\u65b9\u304c\u8a3c\u660e\u66f8\u3092\u63d0\u793a</li> <li>TLS\u30ec\u30d9\u30eb\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u6b63\u5f53\u6027\u3092\u691c\u8a3c</li> </ul> <p>\u9069\u7528\u4f8b:</p> <ul> <li>\u91d1\u878d\u6a5f\u95a2\u306eAPI</li> <li>\u9ad8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304c\u8981\u6c42\u3055\u308c\u308bB2B\u9023\u643a</li> <li>IoT\u30c7\u30d0\u30a4\u30b9\u8a8d\u8a3c</li> </ul> <p>\u8a2d\u5b9a\u4f8b(Spring Boot):</p> <pre><code># application.yml\nserver:\n  ssl:\n    enabled: true\n    key-store: classpath:server-keystore.p12\n    key-store-password: changeit\n    key-store-type: PKCS12\n    client-auth: need  # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u5fc5\u9808\n    trust-store: classpath:truststore.p12\n    trust-store-password: changeit\n</code></pre> PAR (Pushed Authorization Requests) <p>\u76ee\u7684: \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b89\u5168\u306b\u9001\u4fe1</p> <p>\u4ed5\u7d44\u307f:</p> <pre><code>sequenceDiagram\n    participant Client\n    participant AuthServer\n\n    Client-&gt;&gt;AuthServer: 1. POST /as/par&lt;br/&gt;(\u8a8d\u53ef\u30d1\u30e9\u30e1\u30fc\u30bf)\n    AuthServer-&gt;&gt;Client: 2. request_uri\u8fd4\u5374\n    Client-&gt;&gt;AuthServer: 3. GET /authorize&lt;br/&gt;?request_uri=xxx\n    AuthServer-&gt;&gt;Client: 4. \u8a8d\u53ef\u30b3\u30fc\u30c9</code></pre> <p>\u5229\u70b9:</p> <ul> <li>\u2705 \u8a8d\u53ef\u30ea\u30af\u30a8\u30b9\u30c8\u304cURL\u306b\u9732\u51fa\u3057\u306a\u3044</li> <li>\u2705 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b8c\u5168\u6027\u3092\u4fdd\u8a3c</li> <li>\u2705 \u5927\u304d\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u3082\u5bfe\u5fdc</li> </ul> FAPI (Financial-grade API) <p>\u76ee\u7684: \u91d1\u878d\u30b0\u30ec\u30fc\u30c9\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3</p> <p>\u8981\u4ef6:</p> <ul> <li>\u2705 mTLS \u307e\u305f\u306f DPoP \u5fc5\u9808</li> <li>\u2705 PAR \u5fc5\u9808</li> <li>\u2705 PKCE \u5fc5\u9808</li> <li>\u2705 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3</li> <li>\u2705 \u77ed\u5bff\u547d\u30c8\u30fc\u30af\u30f3(5\u5206\u4ee5\u5185)</li> <li>\u2705 JARM(JWT Secured Authorization Response Mode)</li> </ul> <p>\u9069\u7528:</p> <ul> <li>\u30aa\u30fc\u30d7\u30f3\u30d0\u30f3\u30ad\u30f3\u30b0API</li> <li>\u6c7a\u6e08\u30b5\u30fc\u30d3\u30b9</li> <li>\u6a5f\u5bc6\u6027\u306e\u9ad8\u3044\u533b\u7642\u30c7\u30fc\u30bf</li> </ul>"},{"location":"auth/reference/#_4","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d1\u30bf\u30fc\u30f3","text":"\u30d1\u30bf\u30fc\u30f31: BFF (Backend for Frontend) <p>\u69cb\u6210:</p> <pre><code>graph LR\n    Browser --&gt; BFF[Next.js BFF]\n    BFF --&gt; API[Spring Boot API]\n    BFF --&gt; IdP[Cognito]</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u2705 \u30c8\u30fc\u30af\u30f3\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u9732\u51fa\u3057\u306a\u3044</li> <li>\u2705 Cookie\u7ba1\u7406\u304c\u30b7\u30f3\u30d7\u30eb</li> <li>\u2705 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3Cookie\u4e0d\u8981</li> </ul> <p>\u9069\u7528: SPA\u3001\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea(\u63a8\u5968)</p> \u30d1\u30bf\u30fc\u30f32: \u30c8\u30fc\u30af\u30f3\u30ea\u30ec\u30fc <p>\u69cb\u6210:</p> <pre><code>graph LR\n    SPA --&gt; Gateway[API Gateway]\n    Gateway --&gt; API[Microservices]\n    Gateway --&gt; IdP[IdP]</code></pre> <p>\u7279\u5fb4:</p> <ul> <li>\u30c8\u30fc\u30af\u30f3\u3092API Gateway\u7d4c\u7531\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001</li> <li>Gateway \u3067\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u30fb\u5909\u63db</li> </ul> <p>\u9069\u7528: \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3</p> \u30d1\u30bf\u30fc\u30f33: Zero Trust <p>\u539f\u5247:</p> <ul> <li>\u6c7a\u3057\u3066\u4fe1\u983c\u305b\u305a\u3001\u5e38\u306b\u691c\u8a3c</li> <li>\u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u8a8d\u8a3c\u30fb\u8a8d\u53ef</li> <li>\u6700\u5c0f\u6a29\u9650\u306e\u539f\u5247</li> </ul> <p>\u5b9f\u88c5:</p> <pre><code>graph TB\n    Client --&gt; Gateway\n    Gateway --&gt; AuthZ[\u8a8d\u53ef\u30a8\u30f3\u30b8\u30f3]\n    Gateway --&gt; Service1\n    Gateway --&gt; Service2\n    Service1 --&gt; AuthZ\n    Service2 --&gt; AuthZ</code></pre> <p>\u6280\u8853:</p> <ul> <li>Service Mesh (Istio\u3001Linkerd)</li> <li>OPA (Open Policy Agent)</li> <li>SPIFFE/SPIRE</li> </ul>"},{"location":"auth/reference/#webauthn","title":"WebAuthn / \u30d1\u30b9\u30ad\u30fc","text":"\u30d1\u30b9\u30ad\u30fc\u306e\u4ed5\u7d44\u307f <pre><code>sequenceDiagram\n    participant User\n    participant Browser\n    participant Server\n    participant Authenticator\n\n    User-&gt;&gt;Browser: \u767b\u9332\u958b\u59cb\n    Browser-&gt;&gt;Server: \u767b\u9332\u30ea\u30af\u30a8\u30b9\u30c8\n    Server-&gt;&gt;Browser: \u30c1\u30e3\u30ec\u30f3\u30b8\n    Browser-&gt;&gt;Authenticator: \u751f\u4f53\u8a8d\u8a3c\u8981\u6c42\n    Authenticator-&gt;&gt;User: \u6307\u7d0b/\u9854\u8a8d\u8a3c\n    User-&gt;&gt;Authenticator: \u8a8d\u8a3c\u6210\u529f\n    Authenticator-&gt;&gt;Browser: \u516c\u958b\u9375\u30fb\u7f72\u540d\n    Browser-&gt;&gt;Server: \u516c\u958b\u9375\u9001\u4fe1\n    Server-&gt;&gt;Server: \u516c\u958b\u9375\u4fdd\u5b58</code></pre> <p>\u5229\u70b9:</p> <ul> <li>\u2705 \u30d5\u30a3\u30c3\u30b7\u30f3\u30b0\u8010\u6027 - \u30c9\u30e1\u30a4\u30f3\u7d10\u4ed8\u3051</li> <li>\u2705 \u30d1\u30b9\u30ef\u30fc\u30c9\u4e0d\u8981</li> <li>\u2705 \u751f\u4f53\u8a8d\u8a3c\u7d71\u5408</li> </ul> <p>\u5b9f\u88c5\u4f8b:</p> <pre><code>// \u767b\u9332\nconst credential = await navigator.credentials.create({\n  publicKey: {\n    challenge: Uint8Array.from(challenge, c =&gt; c.charCodeAt(0)),\n    rp: {\n      name: \"Example Corp\",\n      id: \"example.com\"\n    },\n    user: {\n      id: Uint8Array.from(userId, c =&gt; c.charCodeAt(0)),\n      name: \"user@example.com\",\n      displayName: \"User Name\"\n    },\n    pubKeyCredParams: [{ alg: -7, type: \"public-key\" }],\n    authenticatorSelection: {\n      userVerification: \"required\"\n    },\n    timeout: 60000\n  }\n});\n\n// \u8a8d\u8a3c\nconst assertion = await navigator.credentials.get({\n  publicKey: {\n    challenge: Uint8Array.from(challenge, c =&gt; c.charCodeAt(0)),\n    rpId: \"example.com\",\n    userVerification: \"required\"\n  }\n});\n</code></pre>"},{"location":"auth/reference/#_5","title":"\u30ec\u30ac\u30b7\u30fc\u30b7\u30b9\u30c6\u30e0\u306e\u30e2\u30c0\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3","text":"\u30bb\u30c3\u30b7\u30e7\u30f3\u30d9\u30fc\u30b9\u304b\u3089\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9\u3078 <p>\u6bb5\u968e\u7684\u79fb\u884c:</p> <pre><code>graph TD\n    Phase1[Phase 1: \u4e21\u65b9\u30b5\u30dd\u30fc\u30c8] --&gt; Phase2[Phase 2: \u30c8\u30fc\u30af\u30f3\u512a\u5148]\n    Phase2 --&gt; Phase3[Phase 3: \u30bb\u30c3\u30b7\u30e7\u30f3\u5ec3\u6b62]</code></pre> <p>Phase 1: \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9</p> <pre><code>// \u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30c8\u30fc\u30af\u30f3\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\n@Component\npublic class HybridAuthFilter extends OncePerRequestFilter {\n    @Override\n    protected void doFilterInternal(HttpServletRequest request,\n                                    HttpServletResponse response,\n                                    FilterChain filterChain) {\n        // 1. \u30c8\u30fc\u30af\u30f3\u8a8d\u8a3c\u3092\u8a66\u884c\n        String token = extractToken(request);\n        if (token != null &amp;&amp; validateToken(token)) {\n            setAuthenticationFromToken(token);\n            filterChain.doFilter(request, response);\n            return;\n        }\n\n        // 2. \u30bb\u30c3\u30b7\u30e7\u30f3\u8a8d\u8a3c\u306b\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\n        HttpSession session = request.getSession(false);\n        if (session != null) {\n            setAuthenticationFromSession(session);\n        }\n\n        filterChain.doFilter(request, response);\n    }\n}\n</code></pre> <p>Phase 2: \u30c8\u30fc\u30af\u30f3\u512a\u5148</p> <ul> <li>\u65b0\u6a5f\u80fd\u306f\u30c8\u30fc\u30af\u30f3\u306e\u307f</li> <li>\u65e2\u5b58\u6a5f\u80fd\u306f\u4e21\u65b9\u30b5\u30dd\u30fc\u30c8</li> </ul> <p>Phase 3: \u30bb\u30c3\u30b7\u30e7\u30f3\u5ec3\u6b62</p> <ul> <li>\u3059\u3079\u3066\u30c8\u30fc\u30af\u30f3\u30d9\u30fc\u30b9</li> <li>\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u524a\u9664</li> </ul> \u81ea\u524d\u8a8d\u8a3c\u304b\u3089OAuth/OIDC\u3078 <p>\u79fb\u884c\u6226\u7565:</p> <ol> <li>IdP\u5c0e\u5165 (Cognito\u3001Auth0\u7b49)</li> <li>\u65e2\u5b58\u30e6\u30fc\u30b6\u30fc\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3</li> <li>\u6bb5\u968e\u7684\u30ab\u30c3\u30c8\u30aa\u30fc\u30d0\u30fc</li> </ol> <p>\u30e6\u30fc\u30b6\u30fc\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3:</p> <pre><code>// Cognito Migration Lambda\nexport const handler = async (event) =&gt; {\n  const { userName, password } = event.request;\n\n  // \u65e2\u5b58DB\u3067\u8a8d\u8a3c\n  const user = await authenticateFromLegacyDB(userName, password);\n\n  if (user) {\n    return {\n      response: {\n        userAttributes: {\n          email: user.email,\n          email_verified: \"true\"\n        },\n        finalUserStatus: \"CONFIRMED\",\n        messageAction: \"SUPPRESS\"\n      }\n    };\n  }\n\n  throw new Error(\"Invalid credentials\");\n};\n</code></pre>"},{"location":"auth/reference/#_6","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":"\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u30a8\u30e9\u30fc <pre><code># \u539f\u56e0\n- \u7f72\u540d\u691c\u8a3c\u5931\u6557: JWKS URI \u8aa4\u308a\n- issuer \u4e0d\u4e00\u81f4: \u8a2d\u5b9a\u78ba\u8a8d\n- \u6709\u52b9\u671f\u9650\u5207\u308c: exp \u30af\u30ec\u30fc\u30e0\u78ba\u8a8d\n- audience \u4e0d\u4e00\u81f4: aud \u30af\u30ec\u30fc\u30e0\u78ba\u8a8d\n\n# \u5bfe\u51e6\n- JWT\u30c7\u30d0\u30c3\u30b0\u30c4\u30fc\u30eb\u4f7f\u7528 (jwt.io)\n- \u30ed\u30b0\u3067\u8a73\u7d30\u30a8\u30e9\u30fc\u78ba\u8a8d\n</code></pre> CORS \u30a8\u30e9\u30fc <pre><code># \u539f\u56e0\n- allowedOrigins \u8a2d\u5b9a\u6f0f\u308c\n- Preflight \u30ea\u30af\u30a8\u30b9\u30c8\u5931\u6557\n\n# \u5bfe\u51e6\n- Spring Boot: CorsConfiguration \u78ba\u8a8d\n- allowCredentials: true \u8a2d\u5b9a\n</code></pre> \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u5931\u6557 <pre><code># \u539f\u56e0\n- \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u8aa4\u308a\n- \u6709\u52b9\u671f\u9650\u5207\u308c\n- Cognito \u5074\u306e\u8a2d\u5b9a\n\n# \u5bfe\u51e6\n- Cognito: enable_token_revocation \u78ba\u8a8d\n- \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u6709\u52b9\u671f\u9650\u78ba\u8a8d\n</code></pre>"},{"location":"auth/reference/#_7","title":"\u53c2\u8003\u8cc7\u6599","text":""},{"location":"auth/reference/#_8","title":"\u4ed5\u69d8\u30fb\u6a19\u6e96","text":"<ul> <li>OAuth 2.1 Draft</li> <li>OpenID Connect Core 1.0</li> <li>RFC 9449 - DPoP</li> <li>FAPI 2.0</li> </ul>"},{"location":"auth/reference/#_9","title":"\u30c4\u30fc\u30eb","text":"<ul> <li>jwt.io - JWT \u30c7\u30d0\u30c3\u30ac</li> <li>OAuth Debugger - OAuth \u30d5\u30ed\u30fc\u30c6\u30b9\u30c8</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025\u5e7410\u6708 \u5bfe\u8c61\u8aad\u8005: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3001\u4e0a\u7d1a\u958b\u767a\u8005</p>"}]}